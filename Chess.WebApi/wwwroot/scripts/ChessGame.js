import { ChessBoardBuilder } from './ChessBoardBuilder.js';
var ChessGame = /** @class */ (function () {
    function ChessGame() {
        this.chessBoardBuilder = new ChessBoardBuilder();
    }
    ChessGame.prototype.switchSide = function () {
        this.chessBoardBuilder.switchSide();
    };
    ChessGame.prototype.newGame = function () {
        var _this = this;
        var request = new XMLHttpRequest();
        request.open('GET', 'KnightsTale/api/game/new');
        request.send();
        request.onreadystatechange = function () {
            if (request.readyState == 4 && request.status == 200) {
                _this.chessBoardBuilder.resetStates();
                _this.chessBoardBuilder.showChessBoard();
            }
        };
    };
    ChessGame.prototype.loadGame = function (_, event) {
        var target = event.target;
        var files = target.files;
        var file = files[0];
        var formData = new FormData();
        formData.append('file', file);
        var request = new XMLHttpRequest();
        request.open('POST', 'KnightsTale/api/game/load');
        request.setRequestHeader('content-type', 'multipart/form-data; boundary=25DD0FA4');
        request.send(formData);
    };
    ChessGame.prototype.saveGame = function () {
        var request = new XMLHttpRequest();
        request.open('PUT', 'KnightsTale/api/game/save');
        request.send();
    };
    return ChessGame;
}());
export { ChessGame };
ko.applyBindings(new ChessGame(), document.getElementById('app'));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2hlc3NHYW1lLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQ2hlc3NHYW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRTNEO0lBSUM7UUFDQyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxpQkFBaUIsRUFBRSxDQUFDO0lBQ2xELENBQUM7SUFFTSw4QkFBVSxHQUFqQjtRQUNDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUNyQyxDQUFDO0lBRU0sMkJBQU8sR0FBZDtRQUFBLGlCQVVDO1FBVEEsSUFBTSxPQUFPLEdBQUcsSUFBSSxjQUFjLEVBQUUsQ0FBQztRQUNyQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO1FBQ2hELE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNmLE9BQU8sQ0FBQyxrQkFBa0IsR0FBRztZQUM1QixJQUFJLE9BQU8sQ0FBQyxVQUFVLElBQUksQ0FBQyxJQUFJLE9BQU8sQ0FBQyxNQUFNLElBQUksR0FBRyxFQUFFO2dCQUNyRCxLQUFJLENBQUMsaUJBQWlCLENBQUMsV0FBVyxFQUFFLENBQUM7Z0JBQ3JDLEtBQUksQ0FBQyxpQkFBaUIsQ0FBQyxjQUFjLEVBQUUsQ0FBQzthQUN4QztRQUNGLENBQUMsQ0FBQztJQUNILENBQUM7SUFFTSw0QkFBUSxHQUFmLFVBQWdCLENBQW1CLEVBQUUsS0FBWTtRQUNoRCxJQUFNLE1BQU0sR0FBcUIsS0FBSyxDQUFDLE1BQU0sQ0FBQztRQUM5QyxJQUFNLEtBQUssR0FBYSxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQ3JDLElBQU0sSUFBSSxHQUFTLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUU1QixJQUFNLFFBQVEsR0FBRyxJQUFJLFFBQVEsRUFBRSxDQUFDO1FBQ2hDLFFBQVEsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBRTlCLElBQU0sT0FBTyxHQUFHLElBQUksY0FBYyxFQUFFLENBQUM7UUFDckMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsMkJBQTJCLENBQUMsQ0FBQztRQUNsRCxPQUFPLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxFQUFFLHdDQUF3QyxDQUFDLENBQUM7UUFDbkYsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBRU0sNEJBQVEsR0FBZjtRQUNDLElBQU0sT0FBTyxHQUFHLElBQUksY0FBYyxFQUFFLENBQUM7UUFDckMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsMkJBQTJCLENBQUMsQ0FBQztRQUNqRCxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUNGLGdCQUFDO0FBQUQsQ0FBQyxBQTNDRCxJQTJDQzs7QUFFRCxFQUFFLENBQUMsYUFBYSxDQUFDLElBQUksU0FBUyxFQUFFLEVBQUUsUUFBUSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hlc3NCb2FyZEJ1aWxkZXIgfSBmcm9tICcuL0NoZXNzQm9hcmRCdWlsZGVyLmpzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBDaGVzc0dhbWUge1xyXG5cclxuXHRwdWJsaWMgY2hlc3NCb2FyZEJ1aWxkZXI6IENoZXNzQm9hcmRCdWlsZGVyO1xyXG5cclxuXHRwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcblx0XHR0aGlzLmNoZXNzQm9hcmRCdWlsZGVyID0gbmV3IENoZXNzQm9hcmRCdWlsZGVyKCk7XHJcblx0fVxyXG5cclxuXHRwdWJsaWMgc3dpdGNoU2lkZSgpOiB2b2lkIHtcclxuXHRcdHRoaXMuY2hlc3NCb2FyZEJ1aWxkZXIuc3dpdGNoU2lkZSgpO1xyXG5cdH1cclxuXHJcblx0cHVibGljIG5ld0dhbWUoKTogdm9pZCB7XHJcblx0XHRjb25zdCByZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcblx0XHRyZXF1ZXN0Lm9wZW4oJ0dFVCcsICdLbmlnaHRzVGFsZS9hcGkvZ2FtZS9uZXcnKTtcclxuXHRcdHJlcXVlc3Quc2VuZCgpO1xyXG5cdFx0cmVxdWVzdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSAoKSA9PiB7XHJcblx0XHRcdGlmIChyZXF1ZXN0LnJlYWR5U3RhdGUgPT0gNCAmJiByZXF1ZXN0LnN0YXR1cyA9PSAyMDApIHtcclxuXHRcdFx0XHR0aGlzLmNoZXNzQm9hcmRCdWlsZGVyLnJlc2V0U3RhdGVzKCk7XHJcblx0XHRcdFx0dGhpcy5jaGVzc0JvYXJkQnVpbGRlci5zaG93Q2hlc3NCb2FyZCgpO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdH1cclxuXHJcblx0cHVibGljIGxvYWRHYW1lKF86IEhUTUxJbnB1dEVsZW1lbnQsIGV2ZW50OiBFdmVudCk6IHZvaWQge1xyXG5cdFx0Y29uc3QgdGFyZ2V0ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZXZlbnQudGFyZ2V0O1xyXG5cdFx0Y29uc3QgZmlsZXMgPSA8RmlsZUxpc3Q+dGFyZ2V0LmZpbGVzO1xyXG5cdFx0Y29uc3QgZmlsZSA9IDxGaWxlPmZpbGVzWzBdO1xyXG5cclxuXHRcdGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XHJcblx0XHRmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCBmaWxlKTtcclxuXHJcblx0XHRjb25zdCByZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcblx0XHRyZXF1ZXN0Lm9wZW4oJ1BPU1QnLCAnS25pZ2h0c1RhbGUvYXBpL2dhbWUvbG9hZCcpO1xyXG5cdFx0cmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKCdjb250ZW50LXR5cGUnLCAnbXVsdGlwYXJ0L2Zvcm0tZGF0YTsgYm91bmRhcnk9MjVERDBGQTQnKTtcclxuXHRcdHJlcXVlc3Quc2VuZChmb3JtRGF0YSk7XHJcblx0fVxyXG5cclxuXHRwdWJsaWMgc2F2ZUdhbWUoKTogdm9pZCB7XHJcblx0XHRjb25zdCByZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcblx0XHRyZXF1ZXN0Lm9wZW4oJ1BVVCcsICdLbmlnaHRzVGFsZS9hcGkvZ2FtZS9zYXZlJyk7XHJcblx0XHRyZXF1ZXN0LnNlbmQoKTtcclxuXHR9XHJcbn1cclxuXHJcbmtvLmFwcGx5QmluZGluZ3MobmV3IENoZXNzR2FtZSgpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJykpOyJdfQ==